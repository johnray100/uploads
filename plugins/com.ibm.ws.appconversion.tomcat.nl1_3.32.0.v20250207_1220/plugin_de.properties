# *+------------------------------------------------------------------------+
# *| Licensed Materials - Property of IBM                                   |
# *| (C) Copyright IBM Corp. 2009, 2018 All Rights Reserved.                |
# *|                                                                        |
# *| US Government Users Restricted Rights - Use, duplication or            |
# *| disclosure restricted by GSA ADP Schedule Contract with                |
# *| IBM Corp.                                                              |
# *+------------------------------------------------------------------------+
# NLS_MESSAGEFORMAT_VAR
# NLS_ENCODING=UNICODE
#


#====================================================================
#Note:
#-make sure plugin.properties is included in the build.properties
#====================================================================

bundle.name=Anwendungsmigration von Apache Tomcat auf WebSphere
bundle.vendor=IBM

# Rule set
appconversion.tomcat.ruleset=Migration von Apache Tomcat auf WebSphere

appconversion.tomcat.general=Apache Tomcat auf WebSphere Traditional und Liberty
appconversion.tomcat.twas=Apache Tomcat auf WebSphere Traditional
appconversion.tomcat.liberty=Apache Tomcat auf Liberty

# XML Rules 
appconversion.tomcat.rule.xml.context.lifecycleListener=Java-EE-Implementierungsdeskriptoren f\u00fcr die Definition von Kontext-Lifecycle-Listenern verwenden
appconversion.tomcat.rule.xml.context.parameter=Java-EE-Implementierungsdeskriptoren f\u00fcr die Definition von Kontextparametern verwenden
appconversion.tomcat.rule.xml.context.resource=Java-EE-Implementierungsdeskriptoren und WebSphere-Bindungen f\u00fcr die Definition von Ressourcenreferenzen verwenden
appconversion.tomcat.rule.xml.invalidWelcomeFileName=Verwendung von Schr\u00e4gstrichen (/) in den Namen von Einf\u00fchrungsdateien von Webmodulen vermeiden
appconversion.tomcat.rule.xml.context.environment=Java-EE-Implementierungsdeskriptoren f\u00fcr die Definition von Umgebungsreferenzen verwenden
appconversion.tomcat.rule.xml.context.resourceLink=Java-EE-Implementierungsdeskriptoren und WebSphere-Bindungen f\u00fcr die Definition von Ressourcenlinkreferenzen verwenden
appconversion.tomcat.rule.xml.context.valve=Valve-Komponente f\u00fcr Kontext nicht verwenden
appconversion.tomcat.rule.xml.resource.share.scope=Bereich f\u00fcr gemeinsame Nutzung in Ressourcenreferenzen festlegen
appconversion.tomcat.rule.xml.missing.security.role=Java-EE-Implementierungsdeskriptoren f\u00fcr die Definition fehlender Sicherheitsrollen verwenden

# Java Rules 
appconversion.tomcat.rule.java.detectInitialContextLookup=Entsprechende Implementierungsdeskriptoreintr\u00e4ge in Kontextsuche sicherstellen
appconversion.tomcat.rule.java.detectTomcatPackages=Apache-Tomcat-Pakete und -APIs nicht verwenden
appconversion.tomcat.rule.java.invalidInitialContext=Verwendung des ung\u00fcltigen Ausgangskontextes java:/comp vermeiden
appconversion.tomcat.rule.java.basicDataSource=BasicDataSource von Apache Tomcat nicht verwenden
appconversion.tomcat.rule.java.detectDoUpgradeMethod=Apache Tomcat-Methode WsServerContainer doUpgrade nicht verwenden
appconversion.tomcat.rule.java.juli.logging=org.apache.juli.logging von Apache Tomcat nicht verwenden
com.ibm.ws.appconversion.tomcat.java.nonportablembeans=F\u00fcr andere Anwendungsserver spezifische MBeans migrieren
appconversion.tomcat.rule.java.detectGetRealPathTomcatSlash=Ergebnis der Verkettung mit getRealPath("/") validieren
appconversion.tomcat.rule.java.detectGetRealPathTomcatEmpty=Ergebnis der Verkettung mit getRealPath("") validieren
appconversion.tomcat.java.detectGetServletPath=Pr\u00fcfen, ob sich das Verhalten der Methoden getServletPath und getPathInfo ge\u00e4ndert hat













